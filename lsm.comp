#version 430 core

// コンピュートシェーダー上のカーネルサイズ
layout(local_size_x = 1, local_size_y = 1) in;

// 現在のデプスデータ
layout (location = 0) uniform sampler2D depth;

// 計算用変数の出力先
uniform vec2 s_XY2;
uniform vec3 s_XYZ;

//layout (location = "XYZLoc") uniform vec3 s_xyz;

// 計算したデータを入れる
layout (rgba32f, binding = 1) uniform restrict image2D depth_out;

// LSMの処理用 深度の範囲 (取ってやる必要があるかも？現状は決め打ち
vec2 range = vec2(100, 7000);

void main(){
	//gl_GlobalInvocationIDでカーネル的に現在地が取れる
	ivec2 texcoord = ivec2(gl_GlobalInvocationID.xy);

	//現在の頂点位置
	vec4 pv = texture(depth,texcoord);

	//計算結果保存用
	vec4 po = vec4(1.0,1.0,1.0,1.0);

	//tex_outputのtexcoordの位置にpoを入れる
	//imageStore(tex_output, texcoord, po);

}